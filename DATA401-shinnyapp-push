## Adefoluke Shemsu
## Week 3 Assignment

# For this assignment, you will place your completed Place Matters copy map into 
# your own Shiny app. Use the ACEs map app materials as a guide. 

# First, I'll need to set my working directory and ensure I have the correct packages installed.

setwd("~/Documents/Education/Penn/Classes/DATA 401/Week 2")

library(leaflet)
library(rgdal)
library(tidyverse)
library(shiny)
library(shinythemes)
library(data.table)
library(DT)

# Next, we'll need to initiate the app server.

app.server <- shinyServer(function(input, output) {

  # Reading data into the server.
  
  crimestats <- read.csv("place_data.csv")
  philly.zip <- readOGR("Zipcodes_Poly", layer = "Zipcodes_Poly", encoding = "UTF-8")
  
# Merging data with the shape file.
  
  philly.zip@data <- data.frame(philly.zip@data, 
                                crimestats[match(philly.zip@data$CODE, 
                                                 crimestats$CODE),])
  
# Adding a new variable to classify risk levels.
  
  philly.zip@data$rank[philly.zip@data$Risk <= 24] <- 1
  philly.zip@data$rank[24 < philly.zip@data$Risk & philly.zip@data$Risk <= 49] <- 2
  philly.zip@data$rank[49 < philly.zip@data$Risk & philly.zip@data$Risk <= 74] <- 3
  philly.zip@data$rank[74 < philly.zip@data$Risk] <- 4
  philly.zip@data$rank[is.na(philly.zip@data$Risk)] <- 0
  
# Creating popup object.
  
  phil.popup <- paste("<strong>Zip Code </strong>", 
                 philly.zip@data$CODE, "<br>",
                 "<br>",
                 "<strong>Risk Index: </strong>", 
                 philly.zip@data$Risk,"%","<br>",
                 "<strong>Poverty: </strong>", 
                 philly.zip@data$Poverty,"%","<br>",
                 "<strong>Education: </strong>", 
                 philly.zip@data$Education,"%","<br>",
                 "<strong>Unemployment: </strong>", 
                 philly.zip@data$Unemployment,"%","<br>",
                 "<strong>Crime: </strong>", 
                 philly.zip@data$Crime,"%","<br>",
                 "<strong>ACEs: </strong>", 
                 philly.zip@data$ACEs,"%","<br>")
  
# Selecting color pallete for the map. 

  map.colors <- colorFactor(c("#FFFFFF", 
                             "#FFDB97",
                             "#FF984E",
                             "#F05051",
                             "#D12F2E"),
                            philly.zip@data$rank)
  
# Mapping layout and creating render function for the server.

  map <- leaflet(philly.zip)%>% 
    addProviderTiles("CartoDB.Positron")%>%
    addPolygons(stroke = TRUE,
                color="#FFFFFF",
                smoothFactor = 0.2, 
                fillOpacity = .8,
                fillColor = ~map.colors(rank),
                weight = 1, 
                popup = phil.popup)%>%
    addLegend("bottomright", 
              colors = c("#FFFFFF", "#FFDB97","#FF984E","#F05051","#D12F2E"),
              labels = c("No data", "0-24","25-49","50-74","75-98"),  
              title = "Risk: Lowest to Highest",
              opacity = 1)  
  
  output$map <- renderLeaflet(map)

})

# Now that the server has been established, we can map that to the UI.

app.ui <- shinyUI(fluidPage(theme = shinytheme("flatly"),
                        
                        # Set the style for the header
                        tags$head(
                          tags$style("h2 {color: #ee5500; }
                                                   h2 {color: #4682B4}; }
                                                   ")),
                        headerPanel("Mapping Crime Risks by Zip Code"),
                        br(),
                        leafletOutput("map", width = "100%", height = "675px")
                        
))

shinyApp(ui = app.ui, server = app.server)
